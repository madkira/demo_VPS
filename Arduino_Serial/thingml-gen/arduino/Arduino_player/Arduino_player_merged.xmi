<?xml version="1.0" encoding="ASCII"?>
<thingML:ThingMLModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:thingML="http://www.thingml.org/xtext/ThingML">
  <types xsi:type="thingML:Thing" name="OutputMessage" fragment="true">
    <messages name="positionsend">
      <annotations name="code" value="1"/>
      <parameters name="x">
        <typeRef type="//@types.8"/>
      </parameters>
      <parameters name="y">
        <typeRef type="//@types.8"/>
      </parameters>
      <parameters name="z">
        <typeRef type="//@types.8"/>
      </parameters>
    </messages>
    <messages name="noSignal">
      <annotations name="code" value="2"/>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="Demo" includes="//@types.0 //@types.16">
    <annotations name="c_header" value="&#xA;#include &lt;Adafruit_ST7735.h>&#xA;#include &lt;Adafruit_GFX.h>&#xA;"/>
    <annotations name="c_global" value="&#xA;#define TFT_CS     10&#xA;#define TFT_RST    9&#xA;#define TFT_DC     8&#xA;Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS,  TFT_DC, TFT_RST);&#xA;&#xA;#define TFT_SCLK 13   // set these to be whatever pins you like!&#xA;#define TFT_MOSI 11   // set these to be whatever pins you like!&#xA;//Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCLK, TFT_RST);&#xA;&#xA;#define DOT 2&#xA;#define CIRCLE 4&#xA;&#xA;uint8_t old_x;&#xA;uint8_t old_y;&#xA;&#xA;uint8_t cur_x;&#xA;uint8_t cur_y;&#xA;&#xA;uint8_t tar_x;&#xA;uint8_t tar_y;&#xA;&#xA;uint8_t Score = 0;&#xA;&#xA;"/>
    <ports xsi:type="thingML:RequiredPort" name="Output" receives="//@types.0/@messages.0 //@types.0/@messages.1"/>
    <ports xsi:type="thingML:RequiredPort" name="Timer" sends="//@types.16/@messages.0 //@types.16/@messages.1" receives="//@types.16/@messages.2"/>
    <ports xsi:type="thingML:InternalPort" name="process"/>
    <behaviour name="Demo_Reach_Zone" initial="//@types.1/@behaviour.0/@substate.0">
      <entry xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;tft.initR(INITR_144GREENTAB);&#xA;  &#x9;&#x9;&#x9;tft.setRotation(3);&#xA;&#x9;&#x9;&#x9;tft.fillScreen(ST7735_BLACK);&#xA;&#x9;&#x9;&#x9;"/>
      </entry>
      <substate name="Idle">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;Score = 0;&#xA;&#x9;&#x9;&#x9;tft.fillScreen(ST7735_BLACK);&#xA;&#x9;&#x9;    tar_x = 64;&#xA;&#x9;&#x9;    tar_y = 64;&#xA;&#x9;&#x9;&#x9;"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="m" port="//@types.1/@ports.0" message="//@types.0/@messages.1"/>
          <action xsi:type="thingML:ExternStatement" statement="tft.fillCircle(cur_x, cur_y, DOT, ST7735_RED);"/>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="m" port="//@types.1/@ports.0" message="//@types.0/@messages.0"/>
          <action xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;&#x9;old_x = cur_x;&#xA;&#x9;&#x9;&#x9;&#x9;old_y = cur_y;&#xA;&#x9;&#x9;&#x9;&#x9;cur_y = int(">
            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.1/@behaviour.0/@substate.0/@internal.1/@event.0" parameter="//@types.0/@messages.0/@parameters.0"/>
            <segments xsi:type="thingML:ExternExpression" expression="/1000);&#xA;&#x9;&#x9;&#x9;&#x9;cur_x = int(">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.1/@behaviour.0/@substate.0/@internal.1/@event.0" parameter="//@types.0/@messages.0/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression="/1000);&#xA;&#x9;&#x9;&#x9;&#x9;tft.fillCircle(old_x, old_y, DOT, ST7735_BLACK);&#xA;&#x9;&#x9;&#x9;    tft.setCursor(0, 30);&#xA;&#x9;&#x9;    &#x9;tft.setTextColor(ST7735_RED);&#xA;&#x9;&#x9;    &#x9;tft.setTextSize(1);&#xA;&#x9;&#x9;    &#x9;tft.println(&quot;Reach the center to Start&quot;);&#xA;&#x9;&#x9;&#x9;    tft.drawCircle(tar_x, tar_y, CIRCLE, ST7735_YELLOW);&#xA;&#x9;&#x9;&#x9;&#x9;tft.fillCircle(cur_x, cur_y, DOT, ST7735_GREEN);&#xA;&#x9;&#x9;&#x9;&#x9;"/>
            </segments>
          </action>
        </internal>
        <outgoing target="//@types.1/@behaviour.0/@substate.1">
          <guard xsi:type="thingML:ExternExpression" expression="(cur_x - tar_x)*(cur_x - tar_x) + (cur_y - tar_y)*(cur_y - tar_y) &lt; CIRCLE*CIRCLE"/>
          <action xsi:type="thingML:SendAction" port="//@types.1/@ports.1" message="//@types.16/@messages.0">
            <parameters xsi:type="thingML:IntegerLiteral"/>
            <parameters xsi:type="thingML:IntegerLiteral" intValue="30000"/>
          </action>
        </outgoing>
      </substate>
      <substate name="SetPoint">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;tft.fillScreen(ST7735_BLACK);&#xA;&#x9;&#x9;&#x9;old_x = 0;&#xA;&#x9;&#x9;&#x9;old_y = 0;&#xA;&#x9;&#x9;&#x9;cur_x = 0;&#xA;&#x9;&#x9;&#x9;cur_y = 0;&#xA;&#x9;&#x9;&#x9;tar_x = random(128);&#xA;&#x9;&#x9;&#x9;tar_y = random(128);&#xA;&#x9;&#x9;&#x9;"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="m" port="//@types.1/@ports.0" message="//@types.0/@messages.0"/>
          <action xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;&#x9;old_x = cur_x;&#xA;&#x9;&#x9;&#x9;&#x9;old_y = cur_y;&#xA;&#x9;&#x9;&#x9;&#x9;cur_y = int(">
            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.1/@behaviour.0/@substate.1/@internal.0/@event.0" parameter="//@types.0/@messages.0/@parameters.0"/>
            <segments xsi:type="thingML:ExternExpression" expression="/1000);&#xA;&#x9;&#x9;&#x9;&#x9;cur_x = int(">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.1/@behaviour.0/@substate.1/@internal.0/@event.0" parameter="//@types.0/@messages.0/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression="/1000);&#xA;&#x9;&#x9;&#x9;&#x9;tft.fillCircle(old_x, old_y, DOT, ST7735_BLACK);&#xA;&#x9;&#x9;&#x9;    tft.drawCircle(tar_x, tar_y, CIRCLE, ST7735_YELLOW);&#xA;&#x9;&#x9;&#x9;&#x9;tft.fillCircle(cur_x, cur_y, DOT, ST7735_GREEN);&#xA;&#x9;&#x9;&#x9;&#x9;"/>
            </segments>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="m" port="//@types.1/@ports.0" message="//@types.0/@messages.1"/>
          <action xsi:type="thingML:ExternStatement" statement="tft.fillCircle(cur_x, cur_y, DOT, ST7735_RED);"/>
        </internal>
        <outgoing target="//@types.1/@behaviour.0/@substate.1">
          <guard xsi:type="thingML:ExternExpression" expression="(cur_x - tar_x)*(cur_x - tar_x) + (cur_y - tar_y)*(cur_y - tar_y) &lt; CIRCLE*CIRCLE"/>
          <action xsi:type="thingML:ExternStatement" statement="Score++;"/>
        </outgoing>
        <outgoing target="//@types.1/@behaviour.0/@substate.2">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.1/@ports.1" message="//@types.16/@messages.2"/>
        </outgoing>
      </substate>
      <substate name="GameOver">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:ExternStatement" statement="&#xA;&#x9;&#x9;&#x9;&#x9;tft.fillScreen(ST7735_BLACK);&#xA;&#x9;&#x9;&#x9;    tft.setCursor(40, 30);&#xA;&#x9;&#x9;&#x9;    tft.setTextColor(ST7735_RED);&#xA;&#x9;&#x9;&#x9;    tft.setTextSize(1);&#xA;&#x9;&#x9;&#x9;    tft.println(&quot;Game Over&quot;);&#xA;&#x9;&#x9;&#x9;    tft.setTextColor(ST7735_YELLOW);&#xA;&#x9;&#x9;&#x9;    tft.setCursor(60, 50);&#xA;&#x9;&#x9;&#x9;    tft.setTextSize(4);&#xA;&#x9;&#x9;&#x9;    tft.println(Score);&#xA;&#x9;&#x9;&#x9;&#x9;"/>
          <actions xsi:type="thingML:SendAction" port="//@types.1/@ports.1" message="//@types.16/@messages.0">
            <parameters xsi:type="thingML:IntegerLiteral"/>
            <parameters xsi:type="thingML:IntegerLiteral" intValue="5000"/>
          </actions>
        </entry>
        <outgoing target="//@types.1/@behaviour.0/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.1/@ports.1" message="//@types.16/@messages.2"/>
        </outgoing>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Char" ByteSize="1">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="char"/>
    <annotations name="c_byte_size" value="1"/>
  </types>
  <types xsi:type="thingML:ObjectType" name="String">
    <annotations name="type_checker" value="String"/>
    <annotations name="c_type" value="char *"/>
    <annotations name="c_byte_size" value="2"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Boolean" ByteSize="1">
    <annotations name="type_checker" value="Boolean"/>
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="UInt8" ByteSize="1">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="UInt16" ByteSize="2">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="uint16_t"/>
    <annotations name="c_byte_size" value="2"/>
    <annotations name="java_type" value="int"/>
    <annotations name="java_primitive" value="true"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Int16" ByteSize="2">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="int16_t"/>
    <annotations name="c_byte_size" value="2"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="UInt32" ByteSize="4">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="uint32_t"/>
    <annotations name="c_byte_size" value="4"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Integer" ByteSize="2">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="int16_t"/>
    <annotations name="c_byte_size" value="2"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Long" ByteSize="4">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="long"/>
    <annotations name="c_byte_size" value="4"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Float" ByteSize="4">
    <annotations name="type_checker" value="Real"/>
    <annotations name="c_type" value="float"/>
    <annotations name="c_byte_size" value="4"/>
  </types>
  <types xsi:type="thingML:Enumeration" name="DigitalState">
    <annotations name="c_byte_size" value="1"/>
    <annotations name="c_type" value="uint8_t"/>
    <literals name="LOW">
      <annotations name="enum_val" value="0"/>
    </literals>
    <literals name="HIGH">
      <annotations name="enum_val" value="1"/>
    </literals>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Byte" ByteSize="1">
    <annotations name="type_checker" value="Integer"/>
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <annotations name="java_type" value="byte"/>
    <annotations name="java_primitive" value="true"/>
    <annotations name="scala_type" value="Byte"/>
    <annotations name="SenML_type" value="Double"/>
  </types>
  <types xsi:type="thingML:Enumeration" name="DigitalState">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="LOW">
      <annotations name="enum_val" value="0"/>
    </literals>
    <literals name="HIGH">
      <annotations name="enum_val" value="1"/>
    </literals>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Double" ByteSize="8">
    <annotations name="type_checker" value="Real"/>
    <annotations name="c_type" value="double"/>
    <annotations name="c_byte_size" value="8"/>
  </types>
  <types xsi:type="thingML:Thing" name="TimerMsgs" fragment="true">
    <messages name="timer_start">
      <annotations name="timer_start" value="true"/>
      <parameters name="id">
        <typeRef type="//@types.5"/>
      </parameters>
      <parameters name="time">
        <typeRef type="//@types.8"/>
      </parameters>
    </messages>
    <messages name="timer_cancel">
      <annotations name="timer_cancel" value="true"/>
      <parameters name="id">
        <typeRef type="//@types.5"/>
      </parameters>
    </messages>
    <messages name="timer_timeout">
      <annotations name="timeout" value="true"/>
      <parameters name="id">
        <typeRef type="//@types.5"/>
      </parameters>
    </messages>
    <messages name="ms8_tic">
      <annotations name="xms_tic" value="8"/>
    </messages>
  </types>
  <protocols name="Serial">
    <annotations name="serializer" value="binary"/>
  </protocols>
  <protocols name="Timer"/>
  <configs name="Arduino_player">
    <instances name="player" type="//@types.1"/>
    <connectors xsi:type="thingML:ExternalConnector" inst="//@configs.0/@instances.0" port="//@types.1/@ports.0" protocol="//@protocols.0"/>
    <connectors xsi:type="thingML:ExternalConnector" inst="//@configs.0/@instances.0" port="//@types.1/@ports.1" protocol="//@protocols.1"/>
  </configs>
</thingML:ThingMLModel>
